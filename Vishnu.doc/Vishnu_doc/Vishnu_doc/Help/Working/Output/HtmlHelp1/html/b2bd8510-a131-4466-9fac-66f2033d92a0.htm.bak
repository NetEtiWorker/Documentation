<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="de-de" /><meta name="Microsoft.Help.Locale" content="de-de" /><meta name="Microsoft.Help.TopicLocale" content="de-de" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-de-DE.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>eigene ValueModifier</title><meta name="Microsoft.Help.Id" content="b2bd8510-a131-4466-9fac-66f2033d92a0" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="XML" /><meta name="Description" content="Dieses Kapitel handelt von selbst erstellten ValueModifiern." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Vishnu - der logische Prozess-Monitor</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Vishnu_64.png" /></td><td class="titleColumn"><h1>eigene ValueModifier</h1></td></tr></table><div><p>
				Dieses Kapitel handelt von selbst erstellten <strong>ValueModifiern</strong>.<br />
				Eigene <span class="keyword">ValueModifier</span> werden Sie eher selten benötigen, da <strong>Vishnu</strong> schon
				<span class="keyword">ValueModifier</span> für die Standard-Ergebnistypen <span class="keyword">Boolean</span>,
				alle <span class="keyword">Integer</span>-Typen, <span class="keyword">DateTime</span> und
				<span class="keyword">String</span> mit Standard-<span class="keyword">C#</span>-Formatierungen mitbringt.<br />
				Was <span class="keyword">ValueModifier</span> überhaupt sind und wie sie verwendet werden, wird ausführlich im Kapitel
				<a href="bc0ffa08-c936-4fad-8fdb-dbd2279fc360.htm#ValueModifier">Vishnu Akteure</a> unter <span class="keyword">ValueModifier</span>
				beschrieben.
			</p><p>
				Nehmen wir einmal an, Sie kommen mit den <strong>Vishnu</strong>-ValueModifiern nicht mehr aus und müssen eine erweiterte Logik implementieren
				oder einen besonderen Ergebnistyp behandeln. Genau dafür sind eigene <span class="keyword">ValueModifier</span> gedacht.
			</p><p>
				Im nachfolgenden Beispiel soll zu einem vorgegebenen Datum die zugehörige Mondphase dargestellt werden.
				Der interne Ergebnistyp ist zwar, wie Sie weiter unten sehen können, einfach nur <span class="keyword">Int32</span>,
				aber die Umsetzung des Datums in den Wert einer Mondphase erfordert eine eigene Logik.
			</p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />  Hinweis</th></tr><tr><td><p>
					Das nachfolgende Beispiel zeigt nebenbei auch noch mal eine Anwendung für
					<a href="74204d60-cbb3-4f38-8266-aa7af541143f.htm">eigene Views</a>.
				</p><p>
					Danke auch an https://www.freeimages.com/illustrations/vector/moonphase.
				</p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="ValueModifierDemoJob"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCAB')" onkeypress="SectionExpandCollapse_CheckKey('IDCAB', event)" tabindex="0"><img id="IDCABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />der Demo Job</span></div><div id="IDCABSection" class="collapsibleSection"><p>
					So sieht der Demo-Job für eigene <span class="keyword">ValueModifier</span> im Betrieb aus:
				</p><div class="mediaNear"><img alt="Check User Value Modifier" src="../media/CheckUserValueModifier.png" /></div><p>
					Über den Dialog <strong>DatumInput</strong> kann ein Datum eingegeben (oder ausgewählt) werden, welches im Knoten
					<strong>Mondphase</strong> als Abbildung der zu dem Datum passenden Mondphase dargestellt wird.
				</p></div><div class="collapsibleAreaRegion" id="ValueModifierDemoJobDescription"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDAB')" onkeypress="SectionExpandCollapse_CheckKey('IDDAB', event)" tabindex="0"><img id="IDDABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />die zugehörige JobDescription.xml</span></div><div id="IDDABSection" class="collapsibleSection"><p>
					Dies ist die <span class="keyword">JobDescription.xml</span> für den Demo-Job für eigene <span class="keyword">ValueModifier</span>:
				</p><div id="IDBBDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDBBDAB_tab1" class="codeSnippetContainerTabSingle">JobDescription.xml</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDBBDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDBBDAB');return false;" title="Copy">Copy</a></div></div><div id="IDBBDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;?</span><span class="highlight-xml-tag">xml</span> <span class="highlight-xml-attribute-name">version</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1.0"</span> <span class="highlight-xml-attribute-name">encoding</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"utf-8"</span><span class="highlight-xml-bracket">?&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">JobDescription</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>CheckUserValueModifier<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LogicalExpression</span><span class="highlight-xml-bracket">&gt;</span>
    DatumInput AND Mondphase
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">LogicalExpression</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Checkers</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"array"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Checker</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>DatumInput<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>WPFDateDialog.dll<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Checker</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Checkers</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">ValueModifiers</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">ValueModifier</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>Mondphase<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">UserControlPath</span><span class="highlight-xml-bracket">&gt;</span>Plugin\SingleNodeUserControl_CheckMoonPhase.dll<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">UserControlPath</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Reference</span><span class="highlight-xml-bracket">&gt;</span>DatumInput<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Reference</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>Plugin\DateToMoonage.dll<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Type</span><span class="highlight-xml-bracket">&gt;</span>Object<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Type</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">ValueModifier</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">ValueModifiers</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">JobDescription</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><p>
					Wie man sieht, wird über die Anweisung
					<span class="keyword">&lt;PhysicalPath&gt;Plugin\DateToMoonage.dll&lt;/PhysicalPath&gt;</span>/<span class="keyword">&lt;PhysicalPath&gt;Plugin\DateToMoonage.dll&lt;/PhysicalPath&gt;</span> auf den eigenen
					<span class="keyword">UserValueModifier</span> verwiesen.<br />
					Der Typ wird für <strong>Vishnu</strong> allgemein auf <span class="keyword">Object</span> festgelegt. Für die korrekte Behandlung
					des tatsächlichen Ergebnistyps sind dann der <span class="keyword">UserValueModifier</span> und die
					<span class="keyword">UserView</span><strong> SingleNodeUserControl_CheckMoonPhase.dll</strong> verantwortlich.
				</p><p>
					Der <span class="keyword">UserValueModifier</span><strong> DateToMoonage.dll</strong> ist wiederum für die korrekte
					Behandlung des Ergebnisses des Knotens <strong>DatumInput</strong> verantwortlich, auf den mit der Anweisung
					<span class="keyword">&lt;Reference&gt;DatumInput&lt;/Reference&gt;</span>/<span class="keyword">&lt;Reference&gt;DatumInput&lt;/Reference&gt;</span> verwiesen wird.
				</p></div><div class="collapsibleAreaRegion" id="ValueModifierDemoProjektDetails"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDEAB')" onkeypress="SectionExpandCollapse_CheckKey('IDEAB', event)" tabindex="0"><img id="IDEABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />das Demo Projekt - Details</span></div><div id="IDEABSection" class="collapsibleSection"><p>
					Die Klasse <strong>DateToMoonAge</strong> muss die Schnittstelle <strong>IValueModifier</strong> implementieren,
					wie im nachfolgenden Code-Ausschnitt zu sehen ist.
				</p><div id="IDBBEAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDBBEAB_tab1" class="codeSnippetContainerTabSingle">Auszug aus der Klasse DateToMoonAge</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDBBEAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDBBEAB');return false;" title="Copy">Copy</a></div></div><div id="IDBBEAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">...
  <span class="highlight-comment">/// &lt;summary&gt;</span>
  <span class="highlight-comment">/// Konvertiert ein übergebenes Datum in das zugehörige Mondalter in Tagen.</span>
  <span class="highlight-comment">/// &lt;/summary&gt;</span>
  <span class="highlight-comment">/// &lt;remarks&gt;</span>
  <span class="highlight-comment">/// File: DateToMoonAge.cs</span>
  <span class="highlight-comment">/// Autor: Erik Nagel, NetEti</span>
  <span class="highlight-comment">/// Herzlichen Dank an Mostafa Kaisoun für seine Berechnungslogik</span>
  <span class="highlight-comment">/// https://www.codeproject.com/script/Membership/View.aspx?mid=1961229</span>
  <span class="highlight-comment">/// </span>
  <span class="highlight-comment">/// 04.04.2020 Erik Nagel: erstellt</span>
  <span class="highlight-comment">/// &lt;/remarks&gt;</span>
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> DateToMoonAge : IValueModifier
  {
      <span class="highlight-comment">/// &lt;summary&gt;</span>
      <span class="highlight-comment">/// Konvertiert ein übergebenes Datum in das zugehörige Mondalter in Tagen.</span>
      <span class="highlight-comment">/// &lt;/summary&gt;</span>
      <span class="highlight-comment">/// &lt;param name="toConvert"&gt;Datum als DateTime.&lt;/param&gt;</span>
      <span class="highlight-comment">/// &lt;returns&gt;Mondalter in Tagen.&lt;/returns&gt;</span>
      <span class="highlight-keyword">public</span> <span class="highlight-keyword">object</span> ModifyValue(<span class="highlight-keyword">object</span> toConvert)
      {
          <span class="highlight-keyword">if</span> (toConvert <span class="highlight-keyword">is</span> DateTime)
          {
              <span class="highlight-keyword">if</span> (toConvert != <span class="highlight-keyword">null</span>)
              {
                  DateTime inDateTime = (DateTime)toConvert;
                  <span class="highlight-keyword">return</span> <span class="highlight-keyword">new</span> DateToMoonAge_ReturnObject(<span class="highlight-keyword">this</span>.MoonAge(inDateTime.Day, inDateTime.Month, inDateTime.Year));
              }
              <span class="highlight-keyword">else</span>
              {
                  <span class="highlight-keyword">return</span> toConvert;
              }
          }
          <span class="highlight-keyword">else</span>
          {
              <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> ArgumentException(String.Format(<span class="highlight-literal">"{0}: kann {1} nicht konvertieren, erwartet wird DateTime"</span>, <span class="highlight-keyword">this</span>.GetType().Name, toConvert.ToString()));
          }
      }
...
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">int</span> MoonAge(<span class="highlight-keyword">int</span> d, <span class="highlight-keyword">int</span> m, <span class="highlight-keyword">int</span> y)
    {
      ...
    }
...
  }
...</pre></div></div></div><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />  Hinweis</th></tr><tr><td><p>
						An dieser Stelle nochmal herzlichen Dank an Mostafa Kaisoun für seine Berechnungslogik
						(https://www.codeproject.com/script/Membership/View.aspx?mid=1961229).
						Wie die Berechnung im Detail erfolgt, ist hier nicht wesentlich, entscheidend ist nur, dass sie ein Ergebnis vom Typ
						<span class="keyword">int</span> (entspricht <span class="keyword">Int32</span>) liefert.
					</p></td></tr></table></div><p>
					Die Klasse <strong>DateToMoonAge</strong> returniert ein Objekt vom Typ <strong>DateToMoonAge_ReturnObject</strong>.
					Der folgenden Code-Ausschnitt zeigt Auszüge aus der zugehörigen Klasse.
				</p><div id="IDEBEAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDEBEAB_tab1" class="codeSnippetContainerTabSingle">Auszug aus der Klasse DateToMoonAge_ReturnObject</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDEBEAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDEBEAB');return false;" title="Copy">Copy</a></div></div><div id="IDEBEAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">...
  <span class="highlight-comment">/// &lt;summary&gt;</span>
  <span class="highlight-comment">/// ReturnObject für das Ergebnis des DateToMoonAge ValueModifiers.</span>
  <span class="highlight-comment">/// &lt;/summary&gt;</span>
  <span class="highlight-comment">/// &lt;remarks&gt;</span>
  <span class="highlight-comment">/// Autor: Erik Nagel, NetEti</span>
  <span class="highlight-comment">///</span>
  <span class="highlight-comment">/// 04.04.2020 Erik Nagel: erstellt</span>
  <span class="highlight-comment">/// &lt;/remarks&gt;</span>
  [DataContract] <span class="highlight-comment">//[Serializable()]</span>
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> DateToMoonAge_ReturnObject
  {
      <span class="highlight-comment">/// &lt;summary&gt;</span>
      <span class="highlight-comment">/// Mondalter in Tagen.</span>
      <span class="highlight-comment">/// &lt;/summary&gt;</span>
      [DataMember]
      <span class="highlight-keyword">public</span> <span class="highlight-keyword">int</span> MoonAge { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }
...
      <span class="highlight-comment">/// &lt;summary&gt;</span>
      <span class="highlight-comment">/// Konstruktor - übernimmt einen String-Wert für die DefaultResultProperty.</span>
      <span class="highlight-comment">/// &lt;/summary&gt;</span>
      <span class="highlight-comment">/// &lt;param name="resultProperty"&gt;Int-Wert für die MoonAgeProperty&lt;/param&gt;</span>
      <span class="highlight-keyword">public</span> DateToMoonAge_ReturnObject(<span class="highlight-keyword">int</span> resultProperty)
      {
          <span class="highlight-keyword">this</span>.MoonAge = resultProperty;
      }

      <span class="highlight-comment">// Es folgen Serialisierungs- und De-Serialisierung-Routinen</span>
      ...
  }
...</pre></div></div></div><p>
					Diese Klasse dient dazu, das Ergebnis von <strong>DateToMoonAge.cs</strong> durch die <strong>Vishnu</strong>-Verarbeitung
					(als anonymes Objekt) zu transportieren. <strong>SingleNodeUserControl_CheckMoonPhase.dll</strong> löst das für
					<strong>Vishnu</strong> anonyme Objekt dann wieder als <strong>DateToMoonAge_ReturnObject</strong> auf.
					Damit das funktioniert, müssen in <strong>DateToMoonAge_ReturnObject</strong> Routinen für die Serialisierung und
					De-Serialisierung der zu transportierenden Daten (hier die Property <strong>DateToMoonAge_ReturnObject</strong>)
					implementiert werden.
				</p><p>
					Die Serialisierung und De-Serialisierung ist im Prinzip immer gleichartig und wurde schon ausführlich im Kapitel
					<a href="74204d60-cbb3-4f38-8266-aa7af541143f.htm#Serialisierung">eigene Views</a> im Unterpunkt <span class="keyword">Serialisierung</span>
					beschrieben. Bitte lesen Sie gegebenenfalls dort nach.
				</p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />  Hinweis</th></tr><tr><td><p>
						Alle Code-Auszüge beschränken sich auf die für die Erklärung notwendigen Teile. Wenn Sie sich für weitere Details interessieren,
						können Sie jederzeit die Originalquellen hinzuziehen.
					</p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="SieheAuch"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDFAB')" onkeypress="SectionExpandCollapse_CheckKey('IDFAB', event)" tabindex="0"><img id="IDFABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Siehe auch</span></div><div id="IDFABSection" class="collapsibleSection"><p><a href="bc0ffa08-c936-4fad-8fdb-dbd2279fc360.htm#ValueModifier">Vishnu Akteure</a></p><p><a href="74204d60-cbb3-4f38-8266-aa7af541143f.htm">eigene Views</a></p></div></div></div><div id="PageFooter" class="pageFooter">Naturgemäß basieren viele Erkenntnisse und Entwicklungen auf im Internet frei zugänglichen Informationen. Eventuell fehlende Verweise auf ursprüngliche Autoren sind unbeabsichtigt und werden nach Meldung sofort nachgepflegt.<p>Copyright © 2012-2025 Erik Nagel</p><div class="feedbackLink">Senden Sie Kommentare zu diesem Feature an
        <a id="HT_MailLink" href="mailto:Vishnu%40reallyhuman.net?Subject=Vishnu%20-%20der%20logische%20Prozess-Monitor">Vishnu@reallyhuman.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Ihre Rückmeldung wird für die Verbesserung der Dokumentation und des Produktes genutzt. Ihre Email-Adresse wird zu keinem anderen Zweck benutzt und wird nach der Behebung des gemeldeten Problems gelöscht. Während der Arbeit an dem Problem kann es sein dass Sie per Email kontaktiert werden für weitergehende Details oder Abklärung zur Rückmeldung von Ihnen. Nachdem das Problem eingegrenzt worden ist kann es sein dass Sie eine Email erhalten zur Problembehebung.");
        </script></div></body></html>