<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="de-de" /><meta name="Microsoft.Help.Locale" content="de-de" /><meta name="Microsoft.Help.TopicLocale" content="de-de" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-de-DE.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>NetEti.ApplicationEnvironment Namensraum</title><meta name="Title" content="NetEti.ApplicationEnvironment" /><meta name="Microsoft.Help.Id" content="N:NetEti.ApplicationEnvironment" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="NetEti.ApplicationEnvironment Namensraum" /><meta name="Microsoft.Help.F1" content="NetEti.ApplicationEnvironment" /><meta name="container" content="NetEti.ApplicationEnvironment" /><meta name="file" content="N_NetEti_ApplicationEnvironment" /><meta name="guid" content="N_NetEti_ApplicationEnvironment" /><meta name="Description" content="Ermittlung von Umgebungsparametern der Applikation" /><link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" /></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Vishnu - der logische Prozess-Monitor</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Vishnu_64.png" /></td><td class="titleColumn"><h1>Net<wbr />Eti.<wbr />Application<wbr />Environment Namensraum</h1></td></tr></table><div class="summary">Ermittlung von Umgebungsparametern der Applikation</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDACA')" onkeypress="SectionExpandCollapse_CheckKey('IDACA', event)" tabindex="0"><img id="IDACAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Klassen</span></div><div id="IDACASection" class="collapsibleSection"><table id="classList" class="members"><tr><th class="iconColumn"> </th><th>Klasse</th><th>Beschreibung</th></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Klasse" title="Public Klasse" /></td><td><a href="T_NetEti_ApplicationEnvironment_AppEnvReader.htm">AppEnvReader</a></td><td>
             Verwaltet eine Liste von IGetStringValue-Objekten und fragt diese
             der Reihe nach ab um das erste gültige Ergebnis selbst wieder als IGetStringValue
             an den Aufrufer zurück zu geben.<br />Für Values, die Wildcards der Form '%Name%'
             enthalten, findet eine rekursive Ersetzung statt (nur für GetStringValue(...)).<br />
             Verwaltet eine zusätzliche Liste, die von außen mit Key-Value Paaren gefüllt
             werden kann; diese Liste wird bei der Suche ebenfalls berücksichtigt.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Klasse" title="Public Klasse" /></td><td><a href="T_NetEti_ApplicationEnvironment_AppSettingsRegistry.htm">AppSettingsRegistry</a></td><td>
            Stellt für mehrere AppEnvReader-Instanzen ein gemeinsames statisches ConcurrentDictionary
            zur Verfügung, über das eine gemeinsame Parameterliste verwaltet werden kann.
            </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Klasse" title="Public Klasse" /></td><td><a href="T_NetEti_ApplicationEnvironment_BasicAppSettings.htm">BasicAppSettings</a></td><td>
             Holt Applikationseinstellungen aus verschiedenen Quellen:
             Kommandozeile, app.config, ggf. app.config.user, Environment.<br />
             Implementiert auch das Lesen der Registry, nutzt dies aber selbst noch nicht.
             Wertet unter Umständen zuletzt auch noch öffentliche Properties aus (DumpAppSettings=true).
             Macht keine Datenbank-Zugriffe, stellt aber entsprechende Properties bereit.<br />
             Die Properties und das Füllen derselben sind nicht zwingend erforderlich, sie dienen
             nur der Bequemlichkeit; alternativ kann aus der Applikation auch direkt über die
             Schnittstellen IGetStringValue und IGetValue&lt;T&gt; auf die Applikations-/Systemumgebung zugegriffen werden.<br />
             Die hier implementierten Applikationseinstellungen sollen allgemeingültig für 
             Standalone-Anwendungen sein; Für anwendungsspezifische Einstellungen sollte diese Klasse
             abgeleitet werden.
             Quellen werden in folgender Reihenfolge ausgewertet (der 1. Treffer gewinnt):<br />
                 1. Kommandozeilen-Parameter (nicht bei .NetCore-Webanwendungen)<br />
                 2. Einstellungen in der app.Config (nicht bei .NetCore- Webanwendungen, stattdessen dann appsettings.json)<br />
                 3. Ggf. Einstellungen in der app.Config.user<br />
                 4. Environment<br />
                 5. Registry<br />
                 6. Unter Umständen öffentliche Properties (DumpAppSettings=true).<br />
             Zeitkritische Initialisierungen sollten in abgeleiteten AppSettings generell vermieden
             werden; die entsprechenden Properties können aber definiert werden und ggf. lazy implementiert werden.<br />
             Über die Properties "DumpAppSettings" und "DumpLoadedAssemblies" können zu Debug-Zwecken alle Properties mit
             ihren Quellen und die FullNames aller zur Laufzeit geladenen Assemblies geloggt werden.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Klasse" title="Public Klasse" /></td><td><a href="T_NetEti_ApplicationEnvironment_ClickOnceDeploymentException.htm">ClickOnceDeploymentException</a></td><td>
            Spezieller Exception-Typ für ClickOnce-Exceptions.
            </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Klasse" title="Public Klasse" /></td><td><a href="T_NetEti_ApplicationEnvironment_ClickOnceInfo.htm">ClickOnceInfo</a></td><td>
            This is a partial replacement for ApplicationDeployment which is not available in .NET 6
            We use a custom Launcher.exe which will set various "CLICKONCE_*" local environment variables
            Thanks to Simon Hewitt (simmotech) for this helpful workaround.
            https://github.com/simmotech/Net6ClickOnce
            Wichtig: Das ganze funktioniert nur, wenn die App über die modifizierte "launcher.exe"
            aus dem Projekt ...Net6ClickOnce-master\ClickOnceLauncher gestartet wird.
            Ansonsten werden die zusätzlichen Environment-Variablen nicht gesetzt und Defauts zurückgegeben.
            </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Klasse" title="Public Klasse" /></td><td><a href="T_NetEti_ApplicationEnvironment_ClickOnceUpdateInfo.htm">ClickOnceUpdateInfo</a></td><td>
            Klasse mit ClickOnce-Updateinformationen.
            </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Klasse" title="Public Klasse" /></td><td><a href="T_NetEti_ApplicationEnvironment_CommandLineAccess.htm">CommandLineAccess</a></td><td>
             Zugriffe auf Kommandozeilen-Parameter<br />
                       Implementiert IGetStringValue.
                       Minimal-Funktionalität:<br />
                       Wenn der übergebene Key in der Kommandozeile existiert,
                       wird dieser unverändert zurückggegeben, ansonsten der
                       Default Value.
                       Ist der übergebene Key numerisch, wird versucht, mit
                       ihm als Index in die Kommandozeilenparameter zu greifen;
                       Bei Erfolg wird der entsprechende Wert zurückgegeben,
                       ansonsten der Default Value.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Klasse" title="Public Klasse" /></td><td><a href="T_NetEti_ApplicationEnvironment_EnvAccess.htm">EnvAccess</a></td><td>
             Zugriffe auf das Environment und auf einige Application-Properties.<br />
                       Implementiert IGetStringValue.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Klasse" title="Public Klasse" /></td><td><a href="T_NetEti_ApplicationEnvironment_PropertyAccess.htm">PropertyAccess</a></td><td>
             Zugriffe auf Properties der aktuellen Anwendung (AppSettings).<br />
             Nutzt System.Reflection, implementiert IGetStringValue.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Klasse" title="Public Klasse" /></td><td><a href="T_NetEti_ApplicationEnvironment_RegAccess.htm">RegAccess</a></td><td>
             Liest Werte aus der Registry ein.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Klasse" title="Public Klasse" /></td><td><a href="T_NetEti_ApplicationEnvironment_SettingsAccess.htm">SettingsAccess</a></td><td>
             Zugriffe auf die über das .Net-Framework verwalteten AppSettings<br />
                       Implementiert IGetStringValue.
             </td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDJCA')" onkeypress="SectionExpandCollapse_CheckKey('IDJCA', event)" tabindex="0"><img id="IDJCAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Enumerationen</span></div><div id="IDJCASection" class="collapsibleSection"><table id="enumerationList" class="members"><tr><th class="iconColumn"> </th><th>Enumeration</th><th>Beschreibung</th></tr><tr><td><img src="../icons/pubEnumeration.gif" alt="Public Enumeration" title="Public Enumeration" /></td><td><a href="T_NetEti_ApplicationEnvironment_RegistryRoot.htm">RegistryRoot</a></td><td>
            Aufzählung der Registry-Rootkeys.
            </td></tr></table></div></div></div><div id="PageFooter" class="pageFooter">Naturgemäß basieren viele Erkenntnisse und Entwicklungen auf im Internet frei zugänglichen Informationen. Eventuell fehlende Verweise auf ursprüngliche Autoren sind unbeabsichtigt und werden nach Meldung sofort nachgepflegt.<p>Copyright © 2012-2025 Erik Nagel</p><div class="feedbackLink">Senden Sie Kommentare zu diesem Feature an
        <a id="HT_MailLink" href="mailto:Vishnu%40reallyhuman.net?Subject=Vishnu%20-%20der%20logische%20Prozess-Monitor">Vishnu@reallyhuman.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Ihre Rückmeldung wird für die Verbesserung der Dokumentation und des Produktes genutzt. Ihre Email-Adresse wird zu keinem anderen Zweck benutzt und wird nach der Behebung des gemeldeten Problems gelöscht. Während der Arbeit an dem Problem kann es sein dass Sie per Email kontaktiert werden für weitergehende Details oder Abklärung zur Rückmeldung von Ihnen. Nachdem das Problem eingegrenzt worden ist kann es sein dass Sie eine Email erhalten zur Problembehebung.");
        </script></div></body></html>